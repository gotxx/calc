{"version":3,"sources":["app.min.js"],"names":["$","Calculator","this","setup","initSliders","getCurrencyData","events","prototype","state","currency","$app","$total","$slidersWrappers","$sliders","$currencySwitch","$sliderOutput","diff","Deferred","sliderArray","self","inPln","each","push","Foundation","Slider","dataChangedDelay","setupSliderData","isDefined","grossInvoice","setState","grossInvoiceInPln","$slider","sliderState","$sliderInput","find","sliderInputId","attr","sliderValue","val","labelSufix","updateLabels","labelLeftTpl","data","labelRightTpl","sliderOutputTpl","currentValue","minValue","maxValue","step","option","$labelLeft","$labelRight","$slideOutput","parents","next","html","updateSlider","sliderIndex","newOptions","currentOptions","options","Object","assign","on","sliderBtnHandler","currencySwitchHandler","e","curr","outputHandler","stateUpdateHandler","foundation","newValue","$btn","change","$sliderWrapper","sliderInputValue","sliderMin","sliderMax","sliderStep","newState","caller","trigger","calculateTotalCost","initial","isChecked","is","currencyType","currencyData","grossInvoiceInEuro","$element","updateGrossInvoiceSlider","reInit","recalculate","euroRate","toFixed","maxValueInEuro","minValueInEuro","currentState","valueInCurrency","start","end","initialStart","initialEnd","getData","url","get","tableAData","done","rates","removeAttr","removeClass","fail","error","console","warn","statusText","reject","tableCData","ask","paymentDeadline","days","grossInvoiceValue","commission","result","jQuery"],"mappings":"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","file":"app.min.js","sourcesContent":[";(function($){\r\n\t\"use strict\";\r\n\r\n    function Calculator(){\r\n        this.setup();\r\n        this.initSliders();\r\n        this.getCurrencyData();\r\n        this.events();\r\n    }\r\n\r\n    Calculator.prototype = {\r\n        setup: function(){\r\n            this.state = {\r\n                currency: \"PLN\"\r\n            };\r\n            this.$app = $('#calc');\r\n            this.$total = $('#totalCost');\r\n            this.$slidersWrappers = $('.js-slider');\r\n            this.$sliders = $('[data-slider]');\r\n            this.$currencySwitch = $(\"#currencySwitch\");\r\n            this.$sliderOutput = $('[data-binding]');\r\n            this.diff = $.Deferred();\r\n            this.sliderArray = [];\r\n        },\r\n        initSliders: function() {\r\n            var self = this, inPln = {};\r\n            this.$sliders.each(function(){\r\n                self.sliderArray.push(new Foundation.Slider($(this), {\r\n                    dataChangedDelay: 0\r\n                }));\r\n                self.setupSliderData($(this));\r\n            });\r\n\r\n            if( self.isDefined(self.state.grossInvoice)){\r\n                inPln = self.state.grossInvoice;\r\n            }\r\n\r\n            self.setState({ grossInvoiceInPln: inPln}, 'set initial PLN state');\r\n        },\r\n        setupSliderData: function($slider){\r\n            var sliderState = {},\r\n                $sliderInput = $slider.find('input[type=\"hidden\"]'),\r\n                sliderInputId = $slider.find('[aria-controls]').attr('aria-controls'),\r\n                sliderValue = $sliderInput.val(),\r\n                labelSufix = sliderInputId === 'grossInvoice' ? ' brutto' : '';\r\n\r\n            this.updateLabels({\r\n                $slider: $slider,\r\n                labelLeftTpl: '<strong>' + $slider.data('start') + '</strong> <span>' + $slider.data('label') + '</span>',\r\n                labelRightTpl: '<strong>' + $slider.data('end') + '</strong> <span>' + $slider.data('label') + '</span>',\r\n                sliderOutputTpl: $slider.data('label') + labelSufix\r\n            });\r\n\r\n            sliderState[sliderInputId] = {\r\n                currentValue: +sliderValue,\r\n                minValue: +$sliderInput.attr('min'),\r\n                maxValue: +$sliderInput.attr('max'),\r\n                step: +$sliderInput.attr('step')\r\n            };\r\n\r\n            this.setState(sliderState,sliderInputId + ' slider setup' );\r\n        },\r\n        updateLabels: function(option){\r\n            var $labelLeft = option.$slider.find('.js-label-left'),\r\n                labelLeftTpl = option.labelLeftTpl,\r\n                $labelRight = option.$slider.find('.js-label-right'),\r\n                labelRightTpl = option.labelRightTpl,\r\n                $slideOutput = option.$slider.parents('.js-slider').next().find('.js-label'),\r\n                sliderOutputTpl = option.sliderOutputTpl;\r\n\r\n            $labelLeft.html(labelLeftTpl);\r\n            $labelRight.html(labelRightTpl);\r\n            $slideOutput.html(sliderOutputTpl);\r\n        },\r\n        updateSlider: function(sliderIndex, newOptions){\r\n            var currentOptions = this.sliderArray[sliderIndex].options;\r\n            this.sliderArray[sliderIndex].options = Object.assign({}, currentOptions, newOptions);\r\n        },\r\n        events: function(){\r\n            var self = this;\r\n            this.$slidersWrappers.on('click', '.js-btn', {self: this}, this.sliderBtnHandler);\r\n            this.$currencySwitch.on('change', {self: this}, this.currencySwitchHandler);\r\n            // $('#calc').on('mousedown', '.js-switch-paddle', {self: this}, this.currencySwitchHandler);\r\n\r\n            this.$sliders.on('changed.zf.slider', function(e){\r\n                var $slider = $(this), sliderState = {},\r\n                    $sliderInput = $slider.find('input[type=\"hidden\"]'),\r\n                    sliderInputId = $slider.find('[aria-controls]').attr('aria-controls'),\r\n                    sliderValue = $sliderInput.val(),\r\n                    $sliderOutput = $('[data-binding=\"'+sliderInputId+'\"]');\r\n\r\n                $sliderOutput.val(+sliderValue);\r\n\r\n                sliderState[sliderInputId] = {\r\n                    currentValue: +sliderValue,\r\n                    minValue: +$sliderInput.attr('min'),\r\n                    maxValue: +$sliderInput.attr('max'),\r\n                    step: +$sliderInput.attr('step'),\r\n                    curr: self.state.currency\r\n                };\r\n\r\n                self.setState(sliderState, sliderInputId + ' changed.zf.slider');\r\n                return false;\r\n            });\r\n\r\n            this.$sliderOutput.on('change', this.outputHandler);\r\n            this.$app.on('stateUpdate', {self: this}, this.stateUpdateHandler);\r\n        },\r\n        outputHandler: function(){\r\n            var $sliderInput = $('#'+$(this).data('binding')),\r\n                $slider = $sliderInput.parents('[data-slider]');\r\n\r\n            $sliderInput.val($(this).val());\r\n            $slider.foundation('_reflow');\r\n        },\r\n        sliderBtnHandler: function (e) {\r\n            var self = e.data.self, newValue,\r\n                $btn = $(this),\r\n                change = +$btn.data('value'),\r\n                $sliderWrapper = $btn.parents('.js-slider'),\r\n                $slider = $sliderWrapper.find('[data-slider]'),\r\n                sliderInputId = $sliderWrapper.find('[aria-controls]').attr('aria-controls'),\r\n                $sliderInput = $('#'+sliderInputId),\r\n                sliderInputValue = +$sliderInput.val(),\r\n                sliderMin = +$sliderInput.attr('min'),\r\n                sliderMax = +$sliderInput.attr('max'),\r\n                sliderStep = $slider.data('step');\r\n\r\n            if(change && sliderInputValue < sliderMax) {\r\n                newValue = sliderInputValue+sliderStep;\r\n                $sliderInput.val(newValue);\r\n                $slider.foundation('_reflow');\r\n            }\r\n\r\n            if(!change && sliderInputValue > sliderMin) {\r\n                newValue = sliderInputValue-sliderStep;\r\n                $sliderInput.val(newValue);\r\n                $slider.foundation('_reflow');\r\n            }\r\n\r\n            return false;\r\n        },\r\n        setState: function(newState, caller){\r\n            this.state = Object.assign({}, this.state, newState);\r\n            this.$app.trigger('stateUpdate', [{caller: caller}]);\r\n            // console.log(caller)\r\n        },\r\n        stateUpdateHandler: function(e, data){\r\n            var self = e.data.self;\r\n            self.calculateTotalCost(data);\r\n        },\r\n        currencySwitchHandler: function(e){\r\n            var self = e.data.self, initial = e.data.initial,\r\n                isChecked = $(this).is(':checked'),\r\n                currencyType = isChecked ? 'EURO' : 'PLN',\r\n                currencyData = isChecked ? self.state.grossInvoiceInEuro : self.state.grossInvoiceInPln,\r\n                $slider = self.sliderArray[0].$element;\r\n\r\n            self.updateLabels({\r\n                $slider: $slider,\r\n                labelLeftTpl: '<strong>' + currencyData.minValue + '</strong> <span>' + currencyType + '</span>',\r\n                labelRightTpl: '<strong>' + currencyData.maxValue  + '</strong> <span>' + currencyType + '</span>',\r\n                sliderOutputTpl: currencyType + ' brutto'\r\n            });\r\n\r\n            self.setState({currency: currencyType}, 'currencySwitchHandler-setCurrency');\r\n            self.updateGrossInvoiceSlider(isChecked, initial);\r\n            Foundation.reInit($($('[data-slider]')[0]));\r\n            // Foundation.reInit(self.sliderArray[0])\r\n        },\r\n        recalculate: function(){\r\n            var sliderStateInEuro = {},\r\n                grossInvoiceInEuro = (this.state.grossInvoice.currentValue/this.state.euroRate).toFixed(2),\r\n                maxValueInEuro = (this.state.grossInvoice.maxValue/this.state.euroRate).toFixed(0),\r\n                minValueInEuro = (this.state.grossInvoice.minValue/this.state.euroRate).toFixed(0);\r\n\r\n            return sliderStateInEuro['grossInvoiceInEuro'] = {\r\n                currentValue: +grossInvoiceInEuro,\r\n                minValue: +minValueInEuro,\r\n                maxValue: +maxValueInEuro,\r\n                step: +this.state.grossInvoice.step\r\n            };\r\n        },\r\n        updateGrossInvoiceSlider: function(isChecked, initial){\r\n            var currentState = isChecked ? this.state.grossInvoiceInEuro : this.state.grossInvoiceInPln,\r\n                currentValue = +$('#grossInvoice').val(),\r\n                // currentValue = (+$('#grossInvoice').val()).toFixed(2),\r\n                valueInCurrency = isChecked ? (currentValue/this.state.euroRate).toFixed(2) : this.isDefined(initial) ? currentValue.toFixed(2) : (currentValue*this.state.euroRate).toFixed(2);\r\n\r\n            if(this.isDefined(currentState) ){\r\n                this.updateSlider(0, {\r\n                    start: +currentState.minValue,\r\n                    end: +currentState.maxValue,\r\n                    step: +currentState.step,\r\n                    initialStart: valueInCurrency,\r\n                    initialEnd: +currentState.step\r\n                });\r\n            }\r\n        },\r\n        getData: function(url){\r\n            return $.get(url);\r\n        },\r\n        getCurrencyData: function(){\r\n            var self = this, tableCData, tableAData = this.getData('https://api.nbp.pl/api/exchangerates/rates/A/EUR/today/');\r\n\r\n            tableAData.done(function(data){\r\n                self.setState({euroRate: (data.rates[0].mid).toFixed(2) }, ' tableAData - set currency');\r\n                self.$currencySwitch.removeAttr('disabled').removeClass('disabled');\r\n\r\n                if(self.isDefined(self.state.grossInvoice)) {\r\n                    self.setState({\r\n                        grossInvoiceInEuro: self.recalculate()\r\n                    }, ' recalculate by tableAData');\r\n                }\r\n\r\n                self.currencySwitchHandler( { data: {self: self, initial: true} });\r\n\r\n            });\r\n\r\n            tableAData.fail(function(error){\r\n                console.warn(error.statusText);\r\n                self.diff.reject(error)\r\n            });\r\n\r\n            this.diff.fail(function(error){\r\n                self.tableCData = self.getData('https://api.nbp.pl/api/exchangerates/rates/C/EUR/today/');\r\n                self.tableCData.done(function(data){\r\n                    self.setState({euroRate: data.rates[0].ask}, ' tableCData - set currency');\r\n                    self.$currencySwitch.removeAttr('disabled').removeClass('disabled');\r\n                    if(self.isDefined(self.state.grossInvoice )) {\r\n                        self.setState({ grossInvoiceInEuro: self.recalculate() }, ' recalculate by tableCData');\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        calculateTotalCost: function(data){\r\n            if(this.isDefined(this.state.grossInvoice) && this.isDefined(this.state.paymentDeadline) ){\r\n                var days = +this.state.paymentDeadline.currentValue,\r\n                    grossInvoiceValue = this.state.grossInvoice.currentValue,\r\n                    grossInvoiceValueToCalculate = this.state.currency === \"EURO\" ? (grossInvoiceValue*this.state.euroRate).toFixed(2) : grossInvoiceValue,\r\n                    ratio = (days*0.1).toFixed(1),\r\n                    baseCommission = 50,\r\n                    commission =  ((grossInvoiceValueToCalculate*ratio)/100),\r\n                    result = commission < baseCommission ? +baseCommission : +commission;\r\n\r\n\r\n                if(data.caller !== 'currencySwitchHandler-setCurrency'){\r\n                    this.$total.html('<strong>' + result.toFixed(2) + '</strong> PLN');\r\n                }\r\n\r\n            }\r\n        },\r\n        isDefined: function(val) {\r\n            return typeof val !== \"undefined\";\r\n        }\r\n\r\n    };\r\n\r\n    $(function () {\r\n        var calc = new Calculator();\r\n        // window.calc = calc;\r\n    });\r\n\r\n})(jQuery);\r\n"]}